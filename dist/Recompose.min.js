!(function(t, n) {
  typeof exports === 'object' && typeof module !== 'undefined'
    ? n(exports, require('react'))
    : typeof define === 'function' && define.amd
      ? define(['exports', 'react'], n)
      : n((t.Recompose = {}), t.React)
})(this, (t, a) => {
  const i = 'default' in a ? a.default : a

  const n = function(n, e) {
    return function(t) {
      return (t[n] = e), t
    }
  }

  const r = function(t) {
    return typeof t === 'string'
      ? t
      : t ? t.displayName || t.name || 'Component' : void 0
  }

  const o = function(e) {
    return function(t) {
      const n = a.createFactory(t)
      return function(t) {
        return n(e(t))
      }
    }
  }
  function p() {
    return (p =
      Object.assign ||
      function(t) {
        for (let n = 1; n < arguments.length; n++) {
          const e = arguments[n]
          for (const r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r])
        }
        return t
      }).apply(this, arguments)
  }
  function s(t, n) {
    ;(t.prototype = Object.create(
      n.prototype
    )), ((t.prototype.constructor = t).__proto__ = n)
  }
  function f() {
    const t = this.constructor.getDerivedStateFromProps(this.props, this.state)
    t != null && this.setState(t)
  }
  function l(t) {
    const n = this.constructor.getDerivedStateFromProps(t, this.state)
    n != null && this.setState(n)
  }
  function y(t, n) {
    try {
      var e = this.props

      var r = this.state
      ;(this.props = t), (this.state = n), (this.__reactInternalSnapshotFlag = !0), (this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
        e,
        r
      ))
    } finally {
      ;(this.props = e), (this.state = r)
    }
  }
  function c(t) {
    const n = t.prototype
    if (!n || !n.isReactComponent)
      throw new Error('Can only polyfill class components')
    if (
      typeof t.getDerivedStateFromProps !== 'function' &&
      typeof n.getSnapshotBeforeUpdate !== 'function'
    )
      return t
    let e = null

    let r = null

    let o = null
    if (
      (
        typeof n.componentWillMount === 'function'
          ? (e = 'componentWillMount')
          : typeof n.UNSAFE_componentWillMount === 'function' &&
            (e = 'UNSAFE_componentWillMount'),
        typeof n.componentWillReceiveProps === 'function'
          ? (r = 'componentWillReceiveProps')
          : typeof n.UNSAFE_componentWillReceiveProps === 'function' &&
            (r = 'UNSAFE_componentWillReceiveProps'),
        typeof n.componentWillUpdate === 'function'
          ? (o = 'componentWillUpdate')
          : typeof n.UNSAFE_componentWillUpdate === 'function' &&
            (o = 'UNSAFE_componentWillUpdate'),
        e !== null || r !== null || o !== null
      )
    ) {
      const u = t.displayName || t.name

      const i =
        typeof t.getDerivedStateFromProps === 'function'
          ? 'getDerivedStateFromProps()'
          : 'getSnapshotBeforeUpdate()'
      throw Error(
        `Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n${u} uses ${i} but also contains the following legacy lifecycles:${e !==
        null
          ? `\n  ${e}`
          : ''}${r !== null ? `\n  ${r}` : ''}${o !== null
          ? `\n  ${o}`
          : ''}\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks`
      )
    }
    if (
      (
        typeof t.getDerivedStateFromProps === 'function' &&
          ((n.componentWillMount = f), (n.componentWillReceiveProps = l)),
        typeof n.getSnapshotBeforeUpdate === 'function'
      )
    ) {
      if (typeof n.componentDidUpdate !== 'function')
        throw new Error(
          'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
        )
      n.componentWillUpdate = y
      const c = n.componentDidUpdate
      n.componentDidUpdate = function(t, n, e) {
        const r = this.__reactInternalSnapshotFlag
          ? this.__reactInternalSnapshot
          : e
        c.call(this, t, n, r)
      }
    }
    return t
  }
  y.__suppressDeprecationWarning = l.__suppressDeprecationWarning = f.__suppressDeprecationWarning = !0
  const h = function(t, n) {
    for (var e = {}, r = 0; r < n.length; r++) {
      const o = n[r]
      t.hasOwnProperty(o) && (e[o] = t[o])
    }
    return e
  }

  const u = Object.prototype.hasOwnProperty
  function d(t, n) {
    return t === n ? t !== 0 || n !== 0 || 1 / t == 1 / n : t != t && n != n
  }
  function v(t, n) {
    if (d(t, n)) return !0
    if (
      typeof t !== 'object' ||
      t === null ||
      typeof n !== 'object' ||
      n === null
    )
      return !1
    const e = Object.keys(t)

    const r = Object.keys(n)
    if (e.length !== r.length) return !1
    for (let o = 0; o < e.length; o++)
      if (!u.call(n, e[o]) || !d(t[e[o]], n[e[o]])) return !1
    return !0
  }
  const m = function(t, n) {
    const e = {}
    for (const r in t) t.hasOwnProperty(r) && (e[r] = n(t[r], r))
    return e
  }

  const b = function(t, n) {
    for (var e = p({}, t), r = 0; r < n.length; r++) {
      const o = n[r]
      e.hasOwnProperty(o) && delete e[o]
    }
    return e
  }

  const g = Object.keys

  const S = function() {}

  const e = function(t) {
    return t
  }

  const P = (function(t) {
    function n() {
      return t.apply(this, arguments) || this
    }
    return s(n, t), (n.prototype.render = function() {
      return null
    }), n
  })(a.Component)

  const O = function(o) {
    return function(t) {
      const r = a.createFactory(t)
      return (function(t) {
        function n() {
          return t.apply(this, arguments) || this
        }
        s(n, t)
        const e = n.prototype
        return (e.shouldComponentUpdate = function(t) {
          return o(this.props, t)
        }), (e.render = function() {
          return r(this.props)
        }), n
      })(a.Component)
    }
  }

  const w = function(e) {
    return O((t, n) => !v(h(n, e), h(t, e)))
  }

  const F = function(t) {
    return Boolean(t && t.prototype && typeof t.prototype.render === 'function')
  }
  const E = {
    childContextTypes: !0,
    contextTypes: !0,
    defaultProps: !0,
    displayName: !0,
    getDefaultProps: !0,
    mixins: !0,
    propTypes: !0,
    type: !0,
  }

  const _ = {
    name: !0,
    length: !0,
    prototype: !0,
    caller: !0,
    callee: !0,
    arguments: !0,
    arity: !0,
  }

  const C = Object.defineProperty

  const U = Object.getOwnPropertyNames

  const x = Object.getOwnPropertySymbols

  const j = Object.getOwnPropertyDescriptor

  const W = Object.getPrototypeOf

  const D = W && W(Object)

  const A =
    typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
        ? global
        : typeof self !== 'undefined' ? self : {}
  function N(t) {
    return t &&
    t.__esModule &&
    Object.prototype.hasOwnProperty.call(t, 'default')
      ? t.default
      : t
  }
  function T(t, n) {
    return t((n = { exports: {} }), n.exports), n.exports
  }
  const R = T((t, n) => {
    Object.defineProperty(n, '__esModule', { value: !0 })
    n.createChangeEmitter = function() {
      let e = []

      let r = e
      function o() {
        r === e && (r = e.slice())
      }
      return {
        listen(n) {
          if (typeof n !== 'function')
            throw new Error('Expected listener to be a function.')
          let e = !0
          return o(), r.push(n), function() {
            if (e) {
              ;(e = !1), o()
              const t = r.indexOf(n)
              r.splice(t, 1)
            }
          }
        },
        emit() {
          for (let t = (e = r), n = 0; n < t.length; n++) t[n](...arguments)
        },
      }
    }
  })
  N(R)
  const V = R.createChangeEmitter

  const M = T((t, n) => {
    Object.defineProperty(n, '__esModule', {
      value: !0,
    }), (n.default = function(t) {
      let n

      const e = t.Symbol
      typeof e === 'function'
        ? e.observable
          ? (n = e.observable)
          : ((n = e('observable')), (e.observable = n))
        : (n = '@@observable')
      return n
    })
  })
  N(M)
  const k = T((t, n) => {
    Object.defineProperty(n, '__esModule', { value: !0 })
    let e

    let r

    const o = (e = M) && e.__esModule ? e : { default: e }
    r =
      typeof self !== 'undefined'
        ? self
        : typeof window !== 'undefined' ? window : void 0 !== A ? A : t
    const u = (0, o.default)(r)
    n.default = u
  })
  N(k)
  const I = k

  let B = { fromESObservable: null, toESObservable: null }

  const H = {
    fromESObservable(t) {
      return typeof B.fromESObservable === 'function'
        ? B.fromESObservable(t)
        : t
    },
    toESObservable(t) {
      return typeof B.toESObservable === 'function' ? B.toESObservable(t) : t
    },
  }

  const $ = function(c) {
    return function(i) {
      return (function(u) {
        function t() {
          for (
            var t, e, n = arguments.length, r = new Array(n), o = 0;
            o < n;
            o++
          )
            r[o] = arguments[o]
          return ((e = u.call(...[this].concat(r)) || this).state = {
            vdom: null,
          }), (e.propsEmitter = V()), (e.props$ = c.fromESObservable(
            (
              ((t = {
                subscribe(n) {
                  return {
                    unsubscribe: e.propsEmitter.listen(t => {
                      t ? n.next(t) : n.complete()
                    }),
                  }
                },
              })[I] = function() {
                return this
              }),
              t
            )
          )), (e.vdom$ = c.toESObservable(i(e.props$))), e
        }
        s(t, u)
        const n = t.prototype
        return (n.componentWillMount = function() {
          const n = this
          ;(this.subscription = this.vdom$.subscribe({
            next(t) {
              n.setState({ vdom: t })
            },
          })), this.propsEmitter.emit(this.props)
        }), (n.componentWillReceiveProps = function(t) {
          this.propsEmitter.emit(t)
        }), (n.shouldComponentUpdate = function(t, n) {
          return n.vdom !== this.state.vdom
        }), (n.componentWillUnmount = function() {
          this.propsEmitter.emit(), this.subscription.unsubscribe()
        }), (n.render = function() {
          return this.state.vdom
        }), t
      })(a.Component)
    }
  }

  const q = function(t) {
    return t
  }

  const z = function(n) {
    const e = $({ fromESObservable: q, toESObservable: q })
    return function(i) {
      return function(t) {
        const r = a.createFactory(t)

        const o = n.fromESObservable

        const u = n.toESObservable
        return e(e => {
          let t
          return ((t = {
            subscribe(n) {
              const t = u(i(o(e))).subscribe({
                next(t) {
                  return n.next(r(t))
                },
              })
              return {
                unsubscribe() {
                  return t.unsubscribe()
                },
              }
            },
          })[I] = function() {
            return this
          }), t
        })
      }
    }
  }

  const K = function(r) {
    return function() {
      let t

      const e = V()

      const n = r.fromESObservable(
        (
          ((t = {
            subscribe(n) {
              return {
                unsubscribe: e.listen(t => n.next(t)),
              }
            },
          })[I] = function() {
            return this
          }),
          t
        )
      )
      return { handler: e.emit, stream: n }
    }
  }

  const L = K(H)
  ;(t.mapProps = o), (t.withProps = function(n) {
    return o(t => p({}, t, typeof n === 'function' ? n(t) : n))
  }), (t.withPropsOnChange = function(o, u) {
    return function(t) {
      const n = a.createFactory(t)

      const e =
        typeof o === 'function'
          ? o
          : function(t, n) {
              return !v(h(t, o), h(n, o))
            }

      const r = (function(o) {
        function t() {
          for (var t, n = arguments.length, e = new Array(n), r = 0; r < n; r++)
            e[r] = arguments[r]
          return ((t = o.call(...[this].concat(e)) || this).state = {
            computedProps: u(t.props),
            prevProps: t.props,
          }), t
        }
        return s(t, o), (t.getDerivedStateFromProps = function(t, n) {
          return e(n.prevProps, t)
            ? { computedProps: u(t), prevProps: t }
            : { prevProps: t }
        }), (t.prototype.render = function() {
          return n(p({}, this.props, this.state.computedProps))
        }), t
      })(a.Component)
      return c(r), r
    }
  }), (t.withHandlers = function(u) {
    return function(t) {
      const n = a.createFactory(t)
      return (function(o) {
        function t() {
          for (var n, t = arguments.length, e = new Array(t), r = 0; r < t; r++)
            e[r] = arguments[r]
          return ((n = o.call(...[this].concat(e)) || this).handlers = m(
            typeof u === 'function' ? u(n.props) : u,
            t =>
              function() {
                return t(n.props)(...arguments)
              }
          )), n
        }
        return s(t, o), (t.prototype.render = function() {
          return n(p({}, this.props, this.handlers))
        }), t
      })(a.Component)
    }
  }), (t.defaultProps = function(r) {
    return function(t) {
      const n = a.createFactory(t)

      const e = function(t) {
        return n(t)
      }
      return (e.defaultProps = r), e
    }
  }), (t.renameProp = function(e, r) {
    return o(t => {
      let n
      return p({}, b(t, [e]), (((n = {})[r] = t[e]), n))
    })
  }), (t.renameProps = function(e) {
    return o(t => {
      return p(
        {},
        b(t, g(e)),
        (
          (r = h(t, g(e))),
          (o = function(t, n) {
            return e[n]
          }),
          g(r).reduce((t, n) => {
            const e = r[n]
            return (t[o(e, n)] = e), t
          }, {})
        )
      )
      let r
      let o
    })
  }), (t.flattenProp = function(e) {
    return function(t) {
      const n = a.createFactory(t)
      return function(t) {
        return n(p({}, t, t[e]))
      }
    }
  }), (t.withState = function(e, r, u) {
    return function(t) {
      const n = a.createFactory(t)
      return (function(o) {
        function t() {
          for (var n, t = arguments.length, e = new Array(t), r = 0; r < t; r++)
            e[r] = arguments[r]
          return ((n = o.call(...[this].concat(e)) || this).state = {
            stateValue: typeof u === 'function' ? u(n.props) : u,
          }), (n.updateStateValue = function(e, t) {
            return n.setState(t => {
              const n = t.stateValue
              return { stateValue: typeof e === 'function' ? e(n) : e }
            }, t)
          }), n
        }
        return s(t, o), (t.prototype.render = function() {
          let t
          return n(
            p(
              {},
              this.props,
              (
                ((t = {})[e] = this.state.stateValue),
                (t[r] = this.updateStateValue),
                t
              )
            )
          )
        }), t
      })(a.Component)
    }
  }), (t.withStateHandlers = function(o, i) {
    return function(t) {
      const n = a.createFactory(t)
      return (function(r) {
        function t() {
          for (var u, t = arguments.length, n = new Array(t), e = 0; e < t; e++)
            n[e] = arguments[e]
          return ((u = r.call(...[this].concat(n)) || this).state =
            typeof o === 'function' ? o(u.props) : o), (u.stateUpdaters = m(
            i,
            o =>
              function(e) {
                for (
                  var t = arguments.length,
                    r = new Array(t > 1 ? t - 1 : 0),
                    n = 1;
                  n < t;
                  n++
                )
                  r[n - 1] = arguments[n]
                e &&
                  typeof e.persist === 'function' &&
                  e.persist(), u.setState((t, n) => o(t, n)(...[e].concat(r)))
              }
          )), u
        }
        return s(t, r), (t.prototype.render = function() {
          return n(p({}, this.props, this.state, this.stateUpdaters))
        }), t
      })(a.Component)
    }
  }), (t.withReducer = function(r, u, i, c) {
    return function(t) {
      const e = a.createFactory(t)
      return (function(o) {
        function t() {
          for (var n, t = arguments.length, e = new Array(t), r = 0; r < t; r++)
            e[r] = arguments[r]
          return ((n = o.call(...[this].concat(e)) || this).state = {
            stateValue: n.initializeStateValue(),
          }), (n.dispatch = function(e, t) {
            return void 0 === t && (t = S), n.setState(
              t => {
                const n = t.stateValue
                return { stateValue: i(n, e) }
              },
              () => t(n.state.stateValue)
            )
          }), n
        }
        s(t, o)
        const n = t.prototype
        return (n.initializeStateValue = function() {
          return void 0 !== c
            ? typeof c === 'function' ? c(this.props) : c
            : i(void 0, { type: '@@recompose/INIT' })
        }), (n.render = function() {
          let t
          return e(
            p(
              {},
              this.props,
              (((t = {})[r] = this.state.stateValue), (t[u] = this.dispatch), t)
            )
          )
        }), t
      })(a.Component)
    }
  }), (t.branch = function(o, u, i) {
    return void 0 === i && (i = e), function(n) {
      let e
      let r
      return function(t) {
        return o(t)
          ? (e = e || a.createFactory(u(n)))(t)
          : (r = r || a.createFactory(i(n)))(t)
      }
    }
  }), (t.renderComponent = function(e) {
    return function(t) {
      const n = a.createFactory(e)
      return function(t) {
        return n(t)
      }
    }
  }), (t.renderNothing = function(t) {
    return P
  }), (t.shouldUpdate = O), (t.pure = function(t) {
    return O((t, n) => !v(t, n))(t)
  }), (t.onlyUpdateForKeys = w), (t.onlyUpdateForPropTypes = function(t) {
    const n = t.propTypes

    const e = Object.keys(n || {})
    return w(e)(t)
  }), (t.withContext = function(r, u) {
    return function(t) {
      const n = a.createFactory(t)

      const e = (function(o) {
        function t() {
          for (var t, n = arguments.length, e = new Array(n), r = 0; r < n; r++)
            e[r] = arguments[r]
          return ((t =
            o.call(...[this].concat(e)) || this).getChildContext = function() {
            return u(t.props)
          }), t
        }
        return s(t, o), (t.prototype.render = function() {
          return n(this.props)
        }), t
      })(a.Component)
      return (e.childContextTypes = r), e
    }
  }), (t.getContext = function(r) {
    return function(t) {
      const e = a.createFactory(t)

      const n = function(t, n) {
        return e(p({}, t, n))
      }
      return (n.contextTypes = r), n
    }
  }), (t.lifecycle = function(r) {
    return function(t) {
      const e = a.createFactory(t)

      const n = (function(t) {
        function n() {
          return t.apply(this, arguments) || this
        }
        return s(n, t), (n.prototype.render = function() {
          return e(p({}, this.props, this.state))
        }), n
      })(a.Component)
      return Object.keys(r).forEach(t => (n.prototype[t] = r[t])), n
    }
  }), (t.toClass = function(e) {
    let t
    let n
    return F(e)
      ? e
      : (
          (n = t = (function(t) {
            function n() {
              return t.apply(this, arguments) || this
            }
            return s(n, t), (n.prototype.render = function() {
              return typeof e === 'string'
                ? i.createElement(e, this.props)
                : e(this.props, this.context)
            }), n
          })(a.Component)),
          (t.displayName = r(e)),
          (t.propTypes = e.propTypes),
          (t.contextTypes = e.contextTypes),
          (t.defaultProps = e.defaultProps),
          n
        )
  }), (t.toRenderProps = function(t) {
    return t(t => t.children(t))
  }), (t.fromRenderProps = function(n, o, u) {
    return void 0 === u && (u = 'children'), function(t) {
      const e = i.createFactory(t)

      const r = i.createFactory(n)
      return function(t) {
        let n
        return r(
          (
            ((n = {})[u] = function() {
              return e(p({}, t, o(...arguments)))
            }),
            n
          )
        )
      }
    }
  }), (t.setStatic = n), (t.setPropTypes = function(t) {
    return n('propTypes', t)
  }), (t.setDisplayName = function(t) {
    return n('displayName', t)
  }), (t.compose = function() {
    for (var t = arguments.length, n = new Array(t), e = 0; e < t; e++)
      n[e] = arguments[e]
    return n.reduce(
      (t, n) =>
        function() {
          return t(n(...arguments))
        },
      t => t
    )
  }), (t.getDisplayName = r), (t.wrapDisplayName = function(t, n) {
    return `${n}(${r(t)})`
  }), (t.shallowEqual = v), (t.isClassComponent = F), (t.createSink = function(
    n
  ) {
    const t = (function(o) {
      function t() {
        for (var t, n = arguments.length, e = new Array(n), r = 0; r < n; r++)
          e[r] = arguments[r]
        return ((t = o.call(...[this].concat(e)) || this).state = {}), t
      }
      return s(t, o), (t.getDerivedStateFromProps = function(t) {
        return n(t), null
      }), (t.prototype.render = function() {
        return null
      }), t
    })(a.Component)
    return c(t), t
  }), (t.componentFromProp = function(n) {
    const t = function(t) {
      return a.createElement(t[n], b(t, [n]))
    }
    return (t.displayName = `componentFromProp(${n})`), t
  }), (t.nest = function() {
    for (var t = arguments.length, n = new Array(t), e = 0; e < t; e++)
      n[e] = arguments[e]
    const r = n.map(a.createFactory)
    return function(t) {
      const n = t.children

      const e = (function(t, n) {
        if (t == null) return {}
        let e

        let r

        const o = {}

        const u = Object.keys(t)
        for (r = 0; r < u.length; r++)
          (e = u[r]), n.indexOf(e) >= 0 || (o[e] = t[e])
        return o
      })(t, ['children'])
      return r.reduceRight((t, n) => n(e, t), n)
    }
  }), (t.hoistStatics = function(e, r) {
    return function(t) {
      const n = e(t)
      return (function t(n, e, r) {
        if (typeof e !== 'string') {
          if (D) {
            const o = W(e)
            o && o !== D && t(n, o, r)
          }
          let u = U(e)
          x && (u = u.concat(x(e)))
          for (let i = 0; i < u.length; ++i) {
            const c = u[i]
            if (!(E[c] || _[c] || (r && r[c]))) {
              const a = j(e, c)
              try {
                C(n, c, a)
              } catch (t) {}
            }
          }
          return n
        }
        return n
      })(n, t, r), n
    }
  }), (t.componentFromStream = function(t) {
    return $(H)(t)
  }), (t.componentFromStreamWithConfig = $), (t.mapPropsStream = function(t) {
    return z(H)(t)
  }), (t.mapPropsStreamWithConfig = z), (t.createEventHandler = L), (t.createEventHandlerWithConfig = K), (t.setObservableConfig = function(
    t
  ) {
    B = t
  }), Object.defineProperty(t, '__esModule', { value: !0 })
})
